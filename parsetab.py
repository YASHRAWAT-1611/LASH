
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQEQNEQleftGTLTGELEleftPLUSMINUSleftTIMESDIVIDEMODrightPOWERrightNOTUMINUSAND ASK CLASS COLON COMMA DIVIDE DOT ELSE ELSEIF EQEQ EQUALS FN GE GT IDENTIFIER IF LBRACE LBRACKET LE LOOP LPAREN LT MINUS MOD NEQ NOT NUMBER OR PLUS POWER RBRACE RBRACKET REPEAT RETURN RPAREN SHOW SKIP STOP STRING TIMES TO_FLOAT TO_NUM TO_STRprogram : statement_liststatement_list : statement\n| statement_list statementstatement : var_decl\n| var_assign\n| func_def\n| func_call\n| show_stmt\n| ask_stmt\n| if_statement\n| loop_statement\n| class_def\n| return_stmt\n| loop_controlvar_decl : IDENTIFIER expressionvar_assign : IDENTIFIER EQUALS expressionfunc_def : FN IDENTIFIER LPAREN parameters RPAREN blockparameters : parameter_list\n| emptyparameter_list : IDENTIFIER\n| parameter_list COMMA IDENTIFIERfunc_call : IDENTIFIER LPAREN arguments RPARENarguments : argument_list\n| emptyargument_list : expression\n| argument_list COMMA expressionshow_stmt : SHOW expressionask_stmt : IDENTIFIER ASK expression\n| IDENTIFIER ASK expression expressionif_statement : IF expression block elseif_list else_blockelseif_list : elseif_list elseif\n| emptyelseif : ELSEIF expression blockelse_block : ELSE block\n| emptyloop_statement : REPEAT expression block\n| LOOP expression blockloop_control : STOP\n| SKIPreturn_stmt : RETURN\n| RETURN expressionclass_def : CLASS IDENTIFIER blockblock : LBRACE statement_list RBRACEexpression : expression PLUS expression\n| expression MINUS expression\n| expression TIMES expression\n| expression DIVIDE expression\n| expression MOD expression\n| expression POWER expression\n| expression GT expression\n| expression LT expression\n| expression GE expression\n| expression LE expression\n| expression EQEQ expression\n| expression NEQ expression\n| expression AND expression\n| expression OR expressionexpression : NOT expression\n| MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : TO_NUM LPAREN expression RPAREN\n| TO_STR LPAREN expression RPAREN\n| TO_FLOAT LPAREN expression RPARENexpression : LBRACKET array_items RBRACKETarray_items : expression_list\n| emptyexpression_list : expression\n| expression_list COMMA expressionexpression : expression LBRACKET expression RBRACKETexpression : LBRACE dict_items RBRACEdict_items : dict_item_list\n| emptydict_item_list : dict_item\n| dict_item_list COMMA dict_itemdict_item : expression COLON expressionexpression : NUMBER\n| STRINGexpression : IDENTIFIERempty :'
    
_lr_action_items = {'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,41,42,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,68,69,70,71,72,73,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,114,115,116,117,118,123,124,125,126,128,130,131,132,137,138,139,141,142,143,144,146,148,],[15,15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,26,40,26,26,26,26,46,26,-38,-39,-3,-78,-15,26,26,26,26,26,26,26,-76,-77,-27,26,-41,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-16,26,-59,-58,26,26,26,119,-79,15,-36,-37,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-22,-60,26,-29,26,26,-64,26,-70,26,26,-79,-32,15,-69,-45,-61,-62,-63,145,-30,-31,-35,26,-43,-17,-34,-33,]),'FN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,23,24,25,26,27,38,39,41,47,63,68,69,70,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,108,114,116,123,124,125,126,128,130,131,132,138,139,141,143,144,146,148,],[16,16,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-40,-38,-39,-3,-78,-15,-76,-77,-27,-41,-16,-28,-59,-58,-79,16,-36,-37,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-22,-60,-29,-64,-70,-79,-32,16,-69,-45,-61,-62,-63,-30,-31,-35,-43,-17,-34,-33,]),'SHOW':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,23,24,25,26,27,38,39,41,47,63,68,69,70,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,108,114,116,123,124,125,126,128,130,131,132,138,139,141,143,144,146,148,],[17,17,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-40,-38,-39,-3,-78,-15,-76,-77,-27,-41,-16,-28,-59,-58,-79,17,-36,-37,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-22,-60,-29,-64,-70,-79,-32,17,-69,-45,-61,-62,-63,-30,-31,-35,-43,-17,-34,-33,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,23,24,25,26,27,38,39,41,47,63,68,69,70,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,108,114,116,123,124,125,126,128,130,131,132,138,139,141,143,144,146,148,],[18,18,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-40,-38,-39,-3,-78,-15,-76,-77,-27,-41,-16,-28,-59,-58,-79,18,-36,-37,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-22,-60,-29,-64,-70,-79,-32,18,-69,-45,-61,-62,-63,-30,-31,-35,-43,-17,-34,-33,]),'REPEAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,23,24,25,26,27,38,39,41,47,63,68,69,70,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,108,114,116,123,124,125,126,128,130,131,132,138,139,141,143,144,146,148,],[19,19,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-40,-38,-39,-3,-78,-15,-76,-77,-27,-41,-16,-28,-59,-58,-79,19,-36,-37,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-22,-60,-29,-64,-70,-79,-32,19,-69,-45,-61,-62,-63,-30,-31,-35,-43,-17,-34,-33,]),'LOOP':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,23,24,25,26,27,38,39,41,47,63,68,69,70,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,108,114,116,123,124,125,126,128,130,131,132,138,139,141,143,144,146,148,],[20,20,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-40,-38,-39,-3,-78,-15,-76,-77,-27,-41,-16,-28,-59,-58,-79,20,-36,-37,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-22,-60,-29,-64,-70,-79,-32,20,-69,-45,-61,-62,-63,-30,-31,-35,-43,-17,-34,-33,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,23,24,25,26,27,38,39,41,47,63,68,69,70,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,108,114,116,123,124,125,126,128,130,131,132,138,139,141,143,144,146,148,],[21,21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-40,-38,-39,-3,-78,-15,-76,-77,-27,-41,-16,-28,-59,-58,-79,21,-36,-37,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-22,-60,-29,-64,-70,-79,-32,21,-69,-45,-61,-62,-63,-30,-31,-35,-43,-17,-34,-33,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,23,24,25,26,27,38,39,41,47,63,68,69,70,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,108,114,116,123,124,125,126,128,130,131,132,138,139,141,143,144,146,148,],[22,22,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-40,-38,-39,-3,-78,-15,-76,-77,-27,-41,-16,-28,-59,-58,-79,22,-36,-37,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-22,-60,-29,-64,-70,-79,-32,22,-69,-45,-61,-62,-63,-30,-31,-35,-43,-17,-34,-33,]),'STOP':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,23,24,25,26,27,38,39,41,47,63,68,69,70,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,108,114,116,123,124,125,126,128,130,131,132,138,139,141,143,144,146,148,],[23,23,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-40,-38,-39,-3,-78,-15,-76,-77,-27,-41,-16,-28,-59,-58,-79,23,-36,-37,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-22,-60,-29,-64,-70,-79,-32,23,-69,-45,-61,-62,-63,-30,-31,-35,-43,-17,-34,-33,]),'SKIP':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,23,24,25,26,27,38,39,41,47,63,68,69,70,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,108,114,116,123,124,125,126,128,130,131,132,138,139,141,143,144,146,148,],[24,24,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-40,-38,-39,-3,-78,-15,-76,-77,-27,-41,-16,-28,-59,-58,-79,24,-36,-37,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-22,-60,-29,-64,-70,-79,-32,24,-69,-45,-61,-62,-63,-30,-31,-35,-43,-17,-34,-33,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,22,23,24,25,26,27,38,39,41,47,63,68,69,70,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,108,114,116,123,124,126,128,130,131,132,138,139,141,143,144,146,148,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-40,-38,-39,-3,-78,-15,-76,-77,-27,-41,-16,-28,-59,-58,-79,-36,-37,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-22,-60,-29,-64,-70,-79,-32,-69,-45,-61,-62,-63,-30,-31,-35,-43,-17,-34,-33,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,14,22,23,24,25,26,27,37,38,39,41,47,63,68,69,70,78,79,80,81,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,108,114,116,123,124,125,126,128,130,131,132,134,135,138,139,141,143,144,146,148,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-40,-38,-39,-3,-78,-15,-79,-76,-77,-27,-41,-16,-28,-59,-58,116,-71,-72,-73,-79,-36,-37,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-22,-60,-29,-64,-70,-79,-32,143,-69,-45,-61,-62,-63,-74,-75,-30,-31,-35,-43,-17,-34,-33,]),'EQUALS':([15,],[28,]),'LPAREN':([15,17,18,19,20,22,26,28,29,30,31,32,33,34,35,36,37,38,39,40,42,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,68,69,70,71,72,73,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,109,110,114,115,116,117,118,126,128,130,131,132,142,],[29,42,42,42,42,42,-78,42,42,42,42,42,71,72,73,42,42,-76,-77,83,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-59,-58,42,42,42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-60,42,42,42,-64,42,-70,42,42,-69,-45,-61,-62,-63,42,]),'ASK':([15,],[30,]),'NOT':([15,17,18,19,20,22,26,28,29,30,31,32,36,37,38,39,42,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,68,69,70,71,72,73,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,109,110,114,115,116,117,118,126,128,130,131,132,142,],[32,32,32,32,32,32,-78,32,32,32,32,32,32,32,-76,-77,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-59,-58,32,32,32,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-60,32,32,32,-64,32,-70,32,32,-69,-45,-61,-62,-63,32,]),'MINUS':([15,17,18,19,20,22,26,27,28,29,30,31,32,36,37,38,39,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,68,69,70,71,72,73,77,82,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,126,127,128,129,130,131,132,133,135,142,147,],[31,31,31,31,31,31,-78,49,31,31,31,31,31,31,31,-76,-77,49,31,49,49,49,49,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,49,49,109,-59,-58,31,31,31,49,49,49,-44,-45,-46,-47,-48,-49,49,49,49,49,49,49,49,49,49,-60,31,49,31,31,49,49,49,-64,31,-70,31,31,-69,49,-45,49,-61,-62,-63,49,49,31,49,]),'TO_NUM':([15,17,18,19,20,22,26,28,29,30,31,32,36,37,38,39,42,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,68,69,70,71,72,73,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,109,110,114,115,116,117,118,126,128,130,131,132,142,],[33,33,33,33,33,33,-78,33,33,33,33,33,33,33,-76,-77,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-59,-58,33,33,33,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-60,33,33,33,-64,33,-70,33,33,-69,-45,-61,-62,-63,33,]),'TO_STR':([15,17,18,19,20,22,26,28,29,30,31,32,36,37,38,39,42,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,68,69,70,71,72,73,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,109,110,114,115,116,117,118,126,128,130,131,132,142,],[34,34,34,34,34,34,-78,34,34,34,34,34,34,34,-76,-77,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-59,-58,34,34,34,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-60,34,34,34,-64,34,-70,34,34,-69,-45,-61,-62,-63,34,]),'TO_FLOAT':([15,17,18,19,20,22,26,28,29,30,31,32,36,37,38,39,42,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,68,69,70,71,72,73,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,109,110,114,115,116,117,118,126,128,130,131,132,142,],[35,35,35,35,35,35,-78,35,35,35,35,35,35,35,-76,-77,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-59,-58,35,35,35,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-60,35,35,35,-64,35,-70,35,35,-69,-45,-61,-62,-63,35,]),'LBRACKET':([15,17,18,19,20,22,26,27,28,29,30,31,32,36,37,38,39,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,68,69,70,71,72,73,77,82,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,126,127,128,129,130,131,132,133,135,142,147,],[36,36,36,36,36,36,-78,62,36,36,36,36,36,36,36,-76,-77,62,36,62,62,62,62,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,62,62,110,-59,-58,36,36,36,62,62,62,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,62,-60,36,62,36,36,62,62,62,-64,36,-70,36,36,-69,62,-45,62,-61,-62,-63,62,62,36,62,]),'LBRACE':([15,17,18,19,20,22,26,28,29,30,31,32,36,37,38,39,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,68,69,70,71,72,73,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,109,110,114,115,116,117,118,126,128,130,131,132,136,140,142,147,],[37,37,37,37,37,37,-78,37,37,37,37,37,37,37,-76,-77,37,86,86,86,86,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-59,-58,37,37,37,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-60,37,37,37,-64,37,-70,37,37,-69,-45,-61,-62,-63,86,86,37,86,]),'NUMBER':([15,17,18,19,20,22,26,28,29,30,31,32,36,37,38,39,42,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,68,69,70,71,72,73,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,109,110,114,115,116,117,118,126,128,130,131,132,142,],[38,38,38,38,38,38,-78,38,38,38,38,38,38,38,-76,-77,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-59,-58,38,38,38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-60,38,38,38,-64,38,-70,38,38,-69,-45,-61,-62,-63,38,]),'STRING':([15,17,18,19,20,22,26,28,29,30,31,32,36,37,38,39,42,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,68,69,70,71,72,73,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,109,110,114,115,116,117,118,126,128,130,131,132,142,],[39,39,39,39,39,39,-78,39,39,39,39,39,39,39,-76,-77,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-59,-58,39,39,39,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-60,39,39,39,-64,39,-70,39,39,-69,-45,-61,-62,-63,39,]),'PLUS':([26,27,38,39,41,43,44,45,47,63,65,68,69,70,77,82,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,111,112,113,114,116,126,127,128,129,130,131,132,133,135,147,],[-78,48,-76,-77,48,48,48,48,48,48,48,48,-59,-58,48,48,48,-44,-45,-46,-47,-48,-49,48,48,48,48,48,48,48,48,48,-60,48,48,48,48,-64,-70,-69,48,-45,48,-61,-62,-63,48,48,48,]),'TIMES':([26,27,38,39,41,43,44,45,47,63,65,68,69,70,77,82,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,111,112,113,114,116,126,127,128,129,130,131,132,133,135,147,],[-78,50,-76,-77,50,50,50,50,50,50,50,50,-59,-58,50,50,50,50,50,-46,-47,-48,-49,50,50,50,50,50,50,50,50,50,-60,50,50,50,50,-64,-70,-69,50,50,50,-61,-62,-63,50,50,50,]),'DIVIDE':([26,27,38,39,41,43,44,45,47,63,65,68,69,70,77,82,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,111,112,113,114,116,126,127,128,129,130,131,132,133,135,147,],[-78,51,-76,-77,51,51,51,51,51,51,51,51,-59,-58,51,51,51,51,51,-46,-47,-48,-49,51,51,51,51,51,51,51,51,51,-60,51,51,51,51,-64,-70,-69,51,51,51,-61,-62,-63,51,51,51,]),'MOD':([26,27,38,39,41,43,44,45,47,63,65,68,69,70,77,82,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,111,112,113,114,116,126,127,128,129,130,131,132,133,135,147,],[-78,52,-76,-77,52,52,52,52,52,52,52,52,-59,-58,52,52,52,52,52,-46,-47,-48,-49,52,52,52,52,52,52,52,52,52,-60,52,52,52,52,-64,-70,-69,52,52,52,-61,-62,-63,52,52,52,]),'POWER':([26,27,38,39,41,43,44,45,47,63,65,68,69,70,77,82,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,111,112,113,114,116,126,127,128,129,130,131,132,133,135,147,],[-78,53,-76,-77,53,53,53,53,53,53,53,53,-59,-58,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-60,53,53,53,53,-64,-70,-69,53,53,53,-61,-62,-63,53,53,53,]),'GT':([26,27,38,39,41,43,44,45,47,63,65,68,69,70,77,82,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,111,112,113,114,116,126,127,128,129,130,131,132,133,135,147,],[-78,54,-76,-77,54,54,54,54,54,54,54,54,-59,-58,54,54,54,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,54,54,54,54,54,-60,54,54,54,54,-64,-70,-69,54,-45,54,-61,-62,-63,54,54,54,]),'LT':([26,27,38,39,41,43,44,45,47,63,65,68,69,70,77,82,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,111,112,113,114,116,126,127,128,129,130,131,132,133,135,147,],[-78,55,-76,-77,55,55,55,55,55,55,55,55,-59,-58,55,55,55,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,55,55,55,55,55,-60,55,55,55,55,-64,-70,-69,55,-45,55,-61,-62,-63,55,55,55,]),'GE':([26,27,38,39,41,43,44,45,47,63,65,68,69,70,77,82,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,111,112,113,114,116,126,127,128,129,130,131,132,133,135,147,],[-78,56,-76,-77,56,56,56,56,56,56,56,56,-59,-58,56,56,56,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,56,56,56,56,56,-60,56,56,56,56,-64,-70,-69,56,-45,56,-61,-62,-63,56,56,56,]),'LE':([26,27,38,39,41,43,44,45,47,63,65,68,69,70,77,82,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,111,112,113,114,116,126,127,128,129,130,131,132,133,135,147,],[-78,57,-76,-77,57,57,57,57,57,57,57,57,-59,-58,57,57,57,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,57,57,57,57,57,-60,57,57,57,57,-64,-70,-69,57,-45,57,-61,-62,-63,57,57,57,]),'EQEQ':([26,27,38,39,41,43,44,45,47,63,65,68,69,70,77,82,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,111,112,113,114,116,126,127,128,129,130,131,132,133,135,147,],[-78,58,-76,-77,58,58,58,58,58,58,58,58,-59,-58,58,58,58,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,58,58,58,-60,58,58,58,58,-64,-70,-69,58,-45,58,-61,-62,-63,58,58,58,]),'NEQ':([26,27,38,39,41,43,44,45,47,63,65,68,69,70,77,82,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,111,112,113,114,116,126,127,128,129,130,131,132,133,135,147,],[-78,59,-76,-77,59,59,59,59,59,59,59,59,-59,-58,59,59,59,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,59,59,59,-60,59,59,59,59,-64,-70,-69,59,-45,59,-61,-62,-63,59,59,59,]),'AND':([26,27,38,39,41,43,44,45,47,63,65,68,69,70,77,82,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,111,112,113,114,116,126,127,128,129,130,131,132,133,135,147,],[-78,60,-76,-77,60,60,60,60,60,60,60,60,-59,-58,60,60,60,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,60,60,-60,60,60,60,60,-64,-70,-69,60,-45,60,-61,-62,-63,60,60,60,]),'OR':([26,27,38,39,41,43,44,45,47,63,65,68,69,70,77,82,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,111,112,113,114,116,126,127,128,129,130,131,132,133,135,147,],[-78,61,-76,-77,61,61,61,61,61,61,61,61,-59,-58,61,61,61,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,61,-60,61,61,61,61,-64,-70,-69,61,-45,61,-61,-62,-63,61,61,61,]),'RPAREN':([26,29,38,39,64,65,66,67,69,70,83,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,111,112,113,114,116,119,120,121,122,126,127,130,131,132,145,],[-78,-79,-76,-77,105,106,-23,-24,-59,-58,-79,106,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-60,130,131,132,-64,-70,-20,136,-18,-19,-69,-26,-61,-62,-63,-21,]),'COMMA':([26,38,39,65,66,69,70,75,77,79,81,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,114,116,119,121,126,127,129,130,131,132,133,134,135,145,],[-78,-76,-77,-25,107,-59,-58,115,-67,117,-73,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-60,-64,-70,-20,137,-69,-26,-67,-61,-62,-63,-68,-74,-75,-21,]),'RBRACKET':([26,36,38,39,69,70,74,75,76,77,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,110,114,116,126,129,130,131,132,133,],[-78,-79,-76,-77,-59,-58,114,-65,-66,-67,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,126,-60,-79,-64,-70,-69,126,-61,-62,-63,-68,]),'COLON':([26,38,39,69,70,82,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,114,116,126,130,131,132,],[-78,-76,-77,-59,-58,118,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-60,-64,-70,-69,-61,-62,-63,]),'ELSE':([85,123,124,139,143,148,],[-79,140,-32,-31,-43,-33,]),'ELSEIF':([85,123,124,139,143,148,],[-79,142,-32,-31,-43,-33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,86,],[2,125,]),'statement':([0,2,86,125,],[3,25,3,25,]),'var_decl':([0,2,86,125,],[4,4,4,4,]),'var_assign':([0,2,86,125,],[5,5,5,5,]),'func_def':([0,2,86,125,],[6,6,6,6,]),'func_call':([0,2,86,125,],[7,7,7,7,]),'show_stmt':([0,2,86,125,],[8,8,8,8,]),'ask_stmt':([0,2,86,125,],[9,9,9,9,]),'if_statement':([0,2,86,125,],[10,10,10,10,]),'loop_statement':([0,2,86,125,],[11,11,11,11,]),'class_def':([0,2,86,125,],[12,12,12,12,]),'return_stmt':([0,2,86,125,],[13,13,13,13,]),'loop_control':([0,2,86,125,],[14,14,14,14,]),'expression':([15,17,18,19,20,22,28,29,30,31,32,36,37,42,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,68,71,72,73,107,109,110,115,117,118,142,],[27,41,43,44,45,47,63,65,68,69,70,77,82,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,111,112,113,127,128,129,133,82,135,147,]),'arguments':([29,],[64,]),'argument_list':([29,],[66,]),'empty':([29,36,37,83,85,110,123,],[67,76,80,122,124,76,141,]),'array_items':([36,110,],[74,74,]),'expression_list':([36,110,],[75,75,]),'dict_items':([37,],[78,]),'dict_item_list':([37,],[79,]),'dict_item':([37,117,],[81,134,]),'block':([43,44,45,46,136,140,147,],[85,87,88,89,144,146,148,]),'parameters':([83,],[120,]),'parameter_list':([83,],[121,]),'elseif_list':([85,],[123,]),'else_block':([123,],[138,]),'elseif':([123,],[139,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',17),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',21),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',22),
  ('statement -> var_decl','statement',1,'p_statement','parser.py',29),
  ('statement -> var_assign','statement',1,'p_statement','parser.py',30),
  ('statement -> func_def','statement',1,'p_statement','parser.py',31),
  ('statement -> func_call','statement',1,'p_statement','parser.py',32),
  ('statement -> show_stmt','statement',1,'p_statement','parser.py',33),
  ('statement -> ask_stmt','statement',1,'p_statement','parser.py',34),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',35),
  ('statement -> loop_statement','statement',1,'p_statement','parser.py',36),
  ('statement -> class_def','statement',1,'p_statement','parser.py',37),
  ('statement -> return_stmt','statement',1,'p_statement','parser.py',38),
  ('statement -> loop_control','statement',1,'p_statement','parser.py',39),
  ('var_decl -> IDENTIFIER expression','var_decl',2,'p_var_decl','parser.py',43),
  ('var_assign -> IDENTIFIER EQUALS expression','var_assign',3,'p_var_assign','parser.py',47),
  ('func_def -> FN IDENTIFIER LPAREN parameters RPAREN block','func_def',6,'p_func_def','parser.py',51),
  ('parameters -> parameter_list','parameters',1,'p_parameters','parser.py',55),
  ('parameters -> empty','parameters',1,'p_parameters','parser.py',56),
  ('parameter_list -> IDENTIFIER','parameter_list',1,'p_parameter_list','parser.py',60),
  ('parameter_list -> parameter_list COMMA IDENTIFIER','parameter_list',3,'p_parameter_list','parser.py',61),
  ('func_call -> IDENTIFIER LPAREN arguments RPAREN','func_call',4,'p_func_call','parser.py',68),
  ('arguments -> argument_list','arguments',1,'p_arguments','parser.py',72),
  ('arguments -> empty','arguments',1,'p_arguments','parser.py',73),
  ('argument_list -> expression','argument_list',1,'p_argument_list','parser.py',77),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','parser.py',78),
  ('show_stmt -> SHOW expression','show_stmt',2,'p_show_stmt','parser.py',85),
  ('ask_stmt -> IDENTIFIER ASK expression','ask_stmt',3,'p_ask_stmt','parser.py',89),
  ('ask_stmt -> IDENTIFIER ASK expression expression','ask_stmt',4,'p_ask_stmt','parser.py',90),
  ('if_statement -> IF expression block elseif_list else_block','if_statement',5,'p_if_statement','parser.py',97),
  ('elseif_list -> elseif_list elseif','elseif_list',2,'p_elseif_list','parser.py',101),
  ('elseif_list -> empty','elseif_list',1,'p_elseif_list','parser.py',102),
  ('elseif -> ELSEIF expression block','elseif',3,'p_elseif','parser.py',109),
  ('else_block -> ELSE block','else_block',2,'p_else_block','parser.py',113),
  ('else_block -> empty','else_block',1,'p_else_block','parser.py',114),
  ('loop_statement -> REPEAT expression block','loop_statement',3,'p_loop_statement','parser.py',118),
  ('loop_statement -> LOOP expression block','loop_statement',3,'p_loop_statement','parser.py',119),
  ('loop_control -> STOP','loop_control',1,'p_loop_control','parser.py',126),
  ('loop_control -> SKIP','loop_control',1,'p_loop_control','parser.py',127),
  ('return_stmt -> RETURN','return_stmt',1,'p_return_stmt','parser.py',131),
  ('return_stmt -> RETURN expression','return_stmt',2,'p_return_stmt','parser.py',132),
  ('class_def -> CLASS IDENTIFIER block','class_def',3,'p_class_def','parser.py',139),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','parser.py',143),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',147),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',148),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',149),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',150),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','parser.py',151),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','parser.py',152),
  ('expression -> expression GT expression','expression',3,'p_expression_binop','parser.py',153),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','parser.py',154),
  ('expression -> expression GE expression','expression',3,'p_expression_binop','parser.py',155),
  ('expression -> expression LE expression','expression',3,'p_expression_binop','parser.py',156),
  ('expression -> expression EQEQ expression','expression',3,'p_expression_binop','parser.py',157),
  ('expression -> expression NEQ expression','expression',3,'p_expression_binop','parser.py',158),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','parser.py',159),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','parser.py',160),
  ('expression -> NOT expression','expression',2,'p_expression_unaryop','parser.py',164),
  ('expression -> MINUS expression','expression',2,'p_expression_unaryop','parser.py',165),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',169),
  ('expression -> TO_NUM LPAREN expression RPAREN','expression',4,'p_expression_cast','parser.py',173),
  ('expression -> TO_STR LPAREN expression RPAREN','expression',4,'p_expression_cast','parser.py',174),
  ('expression -> TO_FLOAT LPAREN expression RPAREN','expression',4,'p_expression_cast','parser.py',175),
  ('expression -> LBRACKET array_items RBRACKET','expression',3,'p_expression_array','parser.py',179),
  ('array_items -> expression_list','array_items',1,'p_array_items','parser.py',183),
  ('array_items -> empty','array_items',1,'p_array_items','parser.py',184),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',188),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',189),
  ('expression -> expression LBRACKET expression RBRACKET','expression',4,'p_expression_array_access','parser.py',196),
  ('expression -> LBRACE dict_items RBRACE','expression',3,'p_expression_dictionary','parser.py',200),
  ('dict_items -> dict_item_list','dict_items',1,'p_dict_items','parser.py',204),
  ('dict_items -> empty','dict_items',1,'p_dict_items','parser.py',205),
  ('dict_item_list -> dict_item','dict_item_list',1,'p_dict_item_list','parser.py',209),
  ('dict_item_list -> dict_item_list COMMA dict_item','dict_item_list',3,'p_dict_item_list','parser.py',210),
  ('dict_item -> expression COLON expression','dict_item',3,'p_dict_item','parser.py',217),
  ('expression -> NUMBER','expression',1,'p_expression_literal','parser.py',221),
  ('expression -> STRING','expression',1,'p_expression_literal','parser.py',222),
  ('expression -> IDENTIFIER','expression',1,'p_expression_identifier','parser.py',226),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',230),
]
